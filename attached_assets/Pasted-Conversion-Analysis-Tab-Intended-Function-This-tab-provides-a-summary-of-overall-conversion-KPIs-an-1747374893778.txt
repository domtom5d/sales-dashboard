Conversion Analysis Tab
Intended Function: This tab provides a summary of overall conversion KPIs and several charts that break down conversion rates by different categories. It should display total leads, conversion percentage, and other high-level metrics, then show trends over time and conversion breakdowns by Booking Type, Referral Source, Marketing Source, Event Timing (lead time, inquiry day), Event Size (guest count, staff ratio), and Geography (state or region). All data should be included by default (unless the user actively filters by date, status, or state). Problems Identified:
Default Date Filter Restricting Data: The dashboard is automatically filtering to the last 90 days of data by default. In setup_filters, the default date range is set to (max_date - 90 days, max_date). This means older leads are excluded on initial load, making many charts appear empty or incomplete. Since filters are effectively “disabled” (not used by the user), the intent is to show all data.
Missing “Event Type” in Charts: The code attempts to plot “Conversion by Booking Type,” using a fallback to an "Event Type" column if booking_type is not present. However, after data normalization, all columns are lowercase with underscores (so an event type column would be event_type). The code is checking for 'Event Type' with a space and capital letters, which never matches the normalized DataFrame. As a result, if the dataset only has event_type (and not booking_type), the chart is skipped and a “No Booking Type data available” message is shown. This is why Conversion by Event Type is not appearing.
Data Integration for Booking/Event Type: In the data processing logic, event type from the operations dataset is not being merged into the main leads DataFrame. Only actual_deal_value was merged from operations. Thus, if the leads data lacks a booking_type field (common if “Booking Type” is recorded only in the operations export or not at all), and the operations data contains an event_type for bookings, the combined dataset still has no booking or event type column to analyze. This structural omission causes the booking/event type chart to have no data.
Chart Rendering Conditions: The plotting functions do not always verify that the required columns are present and non-empty before attempting to plot. For Referral Source and Marketing Source, the code calls plot_top_categories on those columns without a guard. If those columns don’t exist or contain all nulls, it could either error out or simply produce an empty chart. (The Streak export likely includes these fields, but if not populated, the chart might silently fail.) The Booking Type plotting function does attempt a check (if booking_col: ... else: st.info("No Booking Type data")), but as noted, the logic is flawed for event_type. Overall, the tab should be more robust in checking that each category column exists in the DataFrame and has sufficient data before plotting.
NaN and Categorical Handling: There may be NaN values in certain fields (e.g. actual_deal_value for leads that didn’t close, or state for some leads). The code should ensure these NaNs are handled (via fillna or exclusion) before calculating conversion rates. In many cases, the code uses errors='coerce' and drops NaNs for outcome, which is good. Just be mindful that grouping or value counts will naturally ignore NaNs, but explicit handling (like filling actual_deal_value NaN with 0 or a label for “Unknown” category if needed) can make charts clearer.
Recommended Fixes:
Show All Data by Default: Modify the date filter default to include the entire date range. For example, set default_start = min_date instead of max_date - 90 days. This way, when no filter is actively chosen, the data isn’t inadvertently truncated. Essentially, the Date Range picker should default to [min date .. max date] of the data. If the intention is to disable filters entirely, an even simpler change is to skip applying the date filter when no selection is made (or treat the default as “All Time”).
Integrate Event Type Data: Include the event_type field from the operations dataset when merging into the leads. In the normalize_data or process_data step, after merging actual_deal_value, also merge event_type (and booking_type if needed). For example:
python
Copy
Edit
if df_ops is not None and 'event_type' in df_ops.columns:
    df = df.merge(df_ops[['box_key','event_type']], on='box_key', how='left')
Similarly, if booking_type is not already in the leads data but present in operations, merge that too. This ensures the final processed_df contains a column for event/booking type whenever available.
Fix Booking vs Event Type Logic: Update the chart function to look for the normalized column names. In plot_booking_types, change the check to if 'booking_type' in df.columns: booking_col = 'booking_type' elif 'event_type' in df.columns: booking_col = 'event_type'. Also adjust the title/label so that if event_type is being used, it doesn’t still label the chart “Booking Type.” One approach is to pass a dynamic title to the plotting function (e.g. if using event_type data, call plot_top_categories(..., title="Event Type")). This way the chart heading will correctly reflect what is being plotted.
Add Column Existence Checks: Before plotting Referral Source and Marketing Source breakdowns, ensure those columns exist. You can add a simple check like:
python
Copy
Edit
if 'referral_source' in df.columns:
    plot_top_categories(df, 'referral_source', "Referral Source")
else:
    st.info("No Referral Source data available")
(And similarly for marketing_source.) This prevents errors if those fields are missing. In general, each visualization should verify that the underlying data is available. The plot_top_categories function itself can also handle this internally (it appears it may already handle an empty result by catching exceptions and showing an error message), but a quick existence check keeps the flow clear.
Handle Minimum Counts Gracefully: The code uses a min_count threshold (e.g. 10 leads) to decide if a category is significant enough to display. Keep this logic to avoid cluttering charts with tiny categories, but ensure that when no category meets the threshold, the user sees a message explaining that (e.g. “No Booking Type data with at least 10 leads”). It looks like the code is already attempting to do this inside plot_top_categories by checking if the summary DataFrame is empty after filtering. Make sure that message is shown in all relevant cases (for booking type, referral, marketing, etc.) so the user isn’t left with a blank area.
By addressing these issues, the Conversion Analysis tab will display all relevant charts. After fixes, on initial load the KPIs and all charts (time trends, booking/event type, referral source, marketing source, timing factors, size factors, geographic insights) should populate using the full dataset.